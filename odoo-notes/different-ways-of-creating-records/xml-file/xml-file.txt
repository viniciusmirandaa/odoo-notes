structure:

xml file:

school_data.xml

<record id="school_1" model="school.profile">
	<field name="name">School XML1</field>
	<field name="email">school.email@hotmail.com</field>
	<field name="phone">11 9472850294</field>
	<field name="address">Address of this school xml.</field>
	<field name="school_type">private</field>
</record>







with many2one field:

xml file:

school_student.xml


<record id="student_1" model="school.student">
	<field name="name">Student Name</field>
	<field name="total_fees">6050</field>
	<field name="school_id" ref="school.school_1"/>
</record>







with one2many field:

xml file:

student_data.xml

# First way of creating one2many field. School has now two records that refers to it.

<record id="school_2" model="school.profile">
	<field name="name">School XML2</field>
	<field name="email">school.email@hotmail.com</field>
	<field name="phone">11 94754850294</field>
</record>

<record id="student_2" model="school.student">
	<field name="name">Student Name</field>
	<field name="total_fees">290</field>
	<field name="school_id" ref="school.school_2"/>
</record>

<record id="student_3" model="school.student">
	<field name="name">Student Name</field>
	<field name="total_fees">602</field>
	<field name="school_id" ref="school.school_2"/>
</record>


# Second way of creating one2many field. 

<record id="school_2" model="school.profile">
	<field name="name">School XML2</field>
	<field name="email">school.email@hotmail.com</field>
	<field name="phone">11 94754850294</field>
	<field name="student_list" eval="[(0,0, {'name': 'Vinicius', 'total_fees': 250}), (0,0,{'name': 'Joao', 'total_fees':105})]"/> # That way, we will create a school record, and create two student records on it one2many field.
</record>








with many2many field:


<record id="student_2" model="school.student">
	<field name="name">Student Name</field>
	<field name="total_fees">290</field>
	<field name="school_id" ref="school.school_2"/>
	<field name="school_id" eval="[(6, 0, [ref(hobby_1), ref(hobby_2)])]"/>
</record>