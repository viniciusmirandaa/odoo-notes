Odoo language notation:

atributos de campos genéricos:
help - permite descrever a utilidade do campo;
required - torna o campo como requisito de ter uma resposta para que o objeto seja criado;
invisible - o campo fica invisível para o usuário;
readonly - o campo fica apenas para visualização;
default - valores inseridos dentro desse atributo se tornarão o padrão do campo;

Fields:

char:
definition - permite colocar palavras como resultado de um campo;
specifics attibutes:
size: delimita a quantidade de caracteres que o campo irá possuir;
trim: permite que o campo tenha ou não espaços.

boolean:
definition - permite colocar valores lógicos no campo.
specifics attibutes - nenhum.

float:
definition - permite colocar valores flutuantes no campo.
specifics attibutes:
digits: define quais vão ser os digitos decimais e o total.

integer:
definition - permite atribuir valores inteiros para o campo.
specifics attibutes: nenhum.

text:
definition - permite colocar palavras como resultado de um campo, porém com uma capacidade maior;
specifics attibutes:
trim: permite que o campo tenha ou não espaços.

datetime:
definition - permite colocar um campo com data e hora;
specifics attibutes:

date:
definition - permite colocar um campo com data;
specifics attibutes:

selection:
definition - permite colocar um campo com key e value;
specifics attibutes:

binary:
definition - permite colocar como arquivo ou imagens;
specifics attibutes: na view, o atributo filename.

image:
definition - permite colocar um campo com imagem;
specifics attibutes: 
max_width e max_height;
verify_resolution.

hmtl:
definition - permite colocar um com texto, porém outras ferramentas;
specifics attibutes:

Many2one:
definition - permite criar uma foreign key de outro model;
specifics attibutes:

Operators in domain field:

Examples:

[('name', 'like', 'dog')]

This will find recods with name 'dog', 'dogs', 'bulldog', ... but not 'Dog'.

[('name', '=like', 'dog')]

This will find records with name 'dog' (it's almost exactly like the '=' operator).

[('name', 'ilike', 'dog')]

This is the most universal search. It will find records with name 'dog', 'DOGS', 'Bulldog', etc..

['name', '=ilike', 'dog')]

This will find records with name 'dog', 'DOG', 'Dog', 'DOg', DoG', 'dOG', 'doG' and 'dOg'.